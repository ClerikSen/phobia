ARCH	?= x86_64
BUILD	?= /tmp/phobia/$(ARCH)
TARGET	= $(BUILD)/phobia.exe

CROSS	= $(ARCH)-w64-mingw32
SDLDIR	= ../mingw/$(ARCH)-w64-mingw32

CC	= $(CROSS)-gcc
LD	= $(CROSS)-gcc
STRIP	= $(CROSS)-strip -s
MK	= mkdir -p
RM	= rm -rf

CFLAGS	= -std=gnu99 -pipe -Wall -O3 -flto=auto -g3
CFLAGS	+= -fno-stack-protector
CFLAGS	+= -I$(SDLDIR)/include -I$(SDLDIR)/include/SDL2
CFLAGS	+= -D_EMBED_GP -D_WINDOWS

LFLAGS	= -lm -lSDL2 -lSDL2_ttf -lSDL2_image -static
LFLAGS	+= -L$(SDLDIR)/lib

LFLAGS  += -Wl,--gc-sections -Wl,--no-undefined -lusp10 -ldinput8 -ldxguid \
	   -ldxerr8 -luser32 -lgdi32 -lwinmm -limm32 -lole32 -loleaut32 \
	   -lshell32 -lsetupapi -lversion -luuid -lrpcrt4 -static-libgcc

OBJS	= blob_ttf.o \
	  config.o \
	  dirent.o \
	  link.o \
	  nksdl.o \
	  phobia.o \
	  serial.o

OBJS	+= gp/async.o \
	   gp/blob_ttf.o \
	   gp/dirent.o \
	   gp/draw.o \
	   gp/edit.o \
	   gp/gp.o \
	   gp/lang.o \
	   gp/lse.o \
	   gp/lz4.o \
	   gp/menu.o \
	   gp/plot.o \
	   gp/read.o \
	   gp/scheme.o \
	   gp/svg.o

PMCFE_OBJS = $(addprefix $(BUILD)/, $(OBJS))

all: $(TARGET)

$(BUILD)/%.o: %.c
	@ echo "  CC    " $<
	@ $(MK) $(dir $@)
	@ $(CC) -c $(CFLAGS) -MMD -o $@ $<

$(TARGET): $(PMCFE_OBJS)
	@ echo "  LD    " $(notdir $@)
	@ $(LD) $(CFLAGS) -o $@ $^ $(LFLAGS)

zip: $(TARGET)
	@ echo "  ZIP   " $(notdir $<)
	@ $(STRIP) $<
	@ zip -j9 $(BUILD)/phobia-$(ARCH)-$(shell hg id -b)-$(shell hg id -n).zip $<

clean:
	@ echo "  CLEAN "
	@ $(RM) $(BUILD)

include $(wildcard $(BUILD)/*.d) $(wildcard $(BUILD)/*/*.d)

